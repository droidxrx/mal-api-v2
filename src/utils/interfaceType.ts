export type animeFullFields = undefined | string[] | Array<'id' | 'title' | 'main_picture' | 'alternative_titles' | 'start_date' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'updated_at' | 'media_type' | 'status' | 'my_list_status' | 'num_episodes' | 'start_season' | 'broadcast' | 'source' | 'average_episode_duration' | 'rating' | 'studios' | 'pictures' | 'background' | 'related_anime' | 'related_manga' | 'recommendations' | 'statistics'>
export type animeInListFields = undefined | string[] | Array<'id' | 'title' | 'main_picture' | 'alternative_titles' | 'start_date' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'updated_at' | 'media_type' | 'status' | 'my_list_status' | 'num_episodes' | 'start_season' | 'broadcast' | 'source' | 'average_episode_duration' | 'rating' | 'studios'>
export type mangaFullFields = undefined | string[] | Array<'id' | 'title' | 'main_picture' | 'alternative_titles' | 'start_date' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'updated_at' | 'media_type' | 'status' | 'my_list_status' | 'num_volumes' | 'num_chapters' | 'authors' | 'pictures' | 'background' | 'related_anime' | 'related_manga' | 'recommendations' | 'serialization'>
export type mangaInListFields = undefined | string[] | Array<'id' | 'title' | 'main_picture' | 'alternative_titles' | 'start_date' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'updated_at' | 'media_type' | 'status' | 'my_list_status' | 'num_volumes' | 'num_chapters' | 'authors'>
export type userAnimeFields = undefined | string[] | Array<'status' | 'score' | 'num_watched_episodes' | 'is_rewatching' | 'start_date' | 'finish_date' | 'priority' | 'num_times_rewatched' | 'rewatch_value' | 'tags' | 'updated_at' | 'id' | 'title' | 'main_picture' | 'alternative_titles' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'media_type' | 'my_list_status' | 'num_episodes' | 'start_season' | 'broadcast' | 'source' | 'average_episode_duration' | 'rating' | 'studios'>
export type userMangaFields = undefined | string[] | Array<'status' | 'score' | 'num_volumes_read' | 'num_chapters_read' | 'is_rereading' | 'start_date' | 'finish_date' | 'priority' | 'num_times_reread' | 'reread_value' | 'tags' | 'updated_at' | 'id' | 'title' | 'main_picture' | 'alternative_titles' | 'end_date' | 'synopsis' | 'mean' | 'rank' | 'popularity' | 'num_list_users' | 'num_scoring_users' | 'nsfw' | 'genres' | 'created_at' | 'media_type' | 'my_list_status' | 'num_volumes' | 'num_chapters' | 'authors'>
export type userFields = undefined | string[] | Array<'id' | 'name' | 'picture' | 'gender' | 'birthday' | 'location' | 'joined_at' | 'anime_statistics' | 'time_zone' | 'is_supporter'>
export type season = 'spring' | 'summer' | 'fall' | 'winter'
export interface obj { [key: string]: any }
export interface codePair { code_challenge: string, code_verifier: string }
export interface returnPromies { status: boolean, return: any }
export interface animeSearchQuery { q: string, limit?: number, offset?: number, fields?: animeInListFields }
export interface animeSearchRanking { ranking_type: 'all' | 'airing' | 'upcoming' | 'tv' | 'ova' | 'movie' | 'special' | 'bypopularity' | 'favorite', limit?: number, offset?: number, fields?: animeInListFields }
export interface animeSearchSeasonal { year?: number, season?: 'winter' | 'spring' | 'summer' | 'fall', sort?: 'anime_score' | 'anime_num_list_users', limit?: number, offset?: number, fields?: animeInListFields }
export interface animeSearchSuggested { limit?: number, offset?: number, fields?: animeInListFields }
export interface userAnimeList { user_name?: string, status?: 'watching' | 'completed' | 'on_hold' | 'dropped' | 'plan_to_watch', sort?: 'list_score' | 'list_updated_at' | 'anime_title' | 'anime_start_date' | 'anime_id', limit?: number, offset?: number, fields?: userAnimeFields }
export interface userAnimeListUpdate { status?: 'watching' | 'completed' | 'on_hold' | 'dropped' | 'plan_to_watch', is_rewatching?: boolean, score?: 0 | 1 | 2 | 3 | 4| 5 | 6| 7 | 8 | 9 | 10, num_watched_episodes?: number, priority?: 0 | 1 | 2, num_times_rewatched?: number, rewatch_value?: 0 | 1 | 2 | 3 | 4| 5, tags?: string, comments?: string }
export interface mangaSearchQuery { q: string, limit?: number, offset?: number, fields?: mangaInListFields }
export interface mangaSearchRanking { ranking_type: 'all' | 'manga' | 'oneshots' | 'doujin' | 'lightnovels' | 'novels' | 'manhwa' | 'manhua' | 'bypopularity' | 'favorite', limit?: number, offset?: number, fields?: mangaInListFields }
export interface userMangaList { user_name?: string, status?: 'reading' | 'completed' | 'on_hold' | 'dropped' | 'plan_to_read', sort?: 'list_score' | 'list_updated_at' | 'manga_title' | 'manga_start_date' | 'manga_id', limit?: number, offset?: number, fields?: userMangaFields }
export interface userMangaListUpdate { status?: 'reading' | 'completed' | 'on_hold' | 'dropped' | 'plan_to_read', is_rereading?: boolean,	score?: 0 | 1 | 2 | 3 | 4| 5 | 6| 7 | 8 | 9 | 10, num_volumes_read?: number, num_chapters_read?: number,	priority?: 0 | 1 | 2, num_times_reread?: number, reread_value?: 0 | 1 | 2 | 3 | 4| 5, tags?: string, comments?: string }